# MultiContent
prototype(Lelesys.Plugin.NodeTypes:MultiContent) < prototype(TYPO3.Neos:Template)
prototype(Lelesys.Plugin.NodeTypes:MultiContent) {
	templatePath = 'resource://Lelesys.Plugin.MultiContent/Private/Templates/TypoScript/MultiContent.html'
	layoutList = ${q(node).property('layoutList')}
	columnContent1 = TYPO3.Neos:ContentCollection
	columnContent1 {
		nodePath = 'column1'
		collection = ${q(node).children()}
	}
	columnContent2 = TYPO3.Neos:ContentCollection
	columnContent2 {
		nodePath = 'column2'
		collection = ${q(node).children()}
	}
	columnContent3 = TYPO3.Neos:ContentCollection
	columnContent3 {
		nodePath = 'column3'
		collection = ${q(node).children()}
	}
	columnContent4 = TYPO3.Neos:ContentCollection
	columnContent4 {
		nodePath = 'column4'
		collection = ${q(node).children()}
	}
	columnContent5 = TYPO3.Neos:ContentCollection
	columnContent5 {
		nodePath = 'column5'
		collection = ${q(node).children()}
	}
}

prototype(Lelesys.Plugin.NodeTypes:MultiContentTab) < prototype(TYPO3.Neos:Template)
prototype(Lelesys.Plugin.NodeTypes:MultiContentTab) {
	templatePath = 'resource://Lelesys.Plugin.MultiContent/Private/Templates/TypoScript/TabStructure.html'
	tabsCollection = ${q(node).children('tabs').children()}
	tabItemCollection = TYPO3.Neos:ContentCollection
	tabItemCollection {
		nodePath = 'tabs'
		collection = ${q(node).children()}
	}
	tabsToRender = TYPO3.Neos:ContentCollection
	tabsToRender {
		nodePath = 'tabs'
	}
}

prototype(Lelesys.Plugin.NodeTypes:MultiContentTabItem) < prototype(TYPO3.Neos:Template)
prototype(Lelesys.Plugin.NodeTypes:MultiContentTabItem) {
	templatePath = 'resource://Lelesys.Plugin.MultiContent/Private/Templates/TypoScript/TabItem.html'
	tabContainerNode = ${q(node).property('_parent.parent')}
	contentContainer = TYPO3.Neos:ContentCollection
	contentContainer {
		nodePath = 'tabcontent'
		collection = ${q(node).children()}
	}
}

prototype(Lelesys.Plugin.NodeTypes:MultiContentToggle) < prototype(TYPO3.Neos:Template)
prototype(Lelesys.Plugin.NodeTypes:MultiContentToggle) {
	templatePath = 'resource://Lelesys.Plugin.MultiContent/Private/Templates/TypoScript/ToggleStructure.html'
	toggleCollection = ${q(node).children('toggle').children()}
	toggleItemCollection = TYPO3.Neos:ContentCollection
	toggleItemCollection {
		nodePath = 'toggle'
		collection = ${q(node).children()}
	}
	toggleToRender = TYPO3.Neos:ContentCollection
	toggleToRender {
		nodePath = 'toggle'
	}
}

prototype(Lelesys.Plugin.NodeTypes:MultiContentToggleItem) < prototype(TYPO3.Neos.NodeTypes:Text)
prototype(Lelesys.Plugin.NodeTypes:MultiContentToggleItem) {
	templatePath = 'resource://Lelesys.Plugin.MultiContent/Private/Templates/TypoScript/ToggleItem.html'
	title = ${q(node).property('title')}
}

# Definition of custom TypoScript types

# Override template path for multi-column layout
prototype(TYPO3.Neos.NodeTypes:MultiColumn) {
	templatePath = 'resource://Lelesys.Plugin.MultiContent/Private/Templates/TypoScript/MultiColumn.html'
	columns.iterationName = 'columIterator'
}
# reload - Two Column TS Object
prototype(TYPO3.Neos.NodeTypes:TwoColumn) < prototype(TYPO3.Neos.NodeTypes:MultiColumn)

# reload - Three Column TS Object
prototype(TYPO3.Neos.NodeTypes:ThreeColumn) < prototype(TYPO3.Neos.NodeTypes:MultiColumn)

# reload - Four Column TS Object
prototype(TYPO3.Neos.NodeTypes:FourColumn) < prototype(TYPO3.Neos.NodeTypes:MultiColumn)

# Override template path and add additional variable
prototype(TYPO3.Neos.NodeTypes:MultiColumnItem) {
	templatePath = 'resource://Lelesys.Plugin.MultiContent/Private/Templates/TypoScript/MultiColumnItem.html'
	columnSpan = Lelesys.Plugin.MultiContent:GridCalculator
}

prototype(Lelesys.Plugin.MultiContent:GridCalculator) {
	@class = 'Lelesys\\Plugin\\MultiContent\\TypoScript\\GridCalculator'
}

prototype(Lelesys.Plugin.NodeTypes:MultiContentSlide) < prototype(TYPO3.Neos:Template)
prototype(Lelesys.Plugin.NodeTypes:MultiContentSlide) {
	templatePath = 'resource://Lelesys.Plugin.MultiContent/Private/Templates/TypoScript/SlideStructure.html'
	slidesCollection = ${q(node).children('slides').children()}
	slideItemCollection = TYPO3.Neos:ContentCollection
	slideItemCollection {
		nodePath = 'slides'
		collection = ${q(node).children()}
	}
	slidesToRender = TYPO3.Neos:ContentCollection
	slidesToRender {
		nodePath = 'slides'
	}
	properties = ${node.properties}
}

prototype(Lelesys.Plugin.NodeTypes:MultiContentSlideItem) < prototype(TYPO3.Neos:Template)
prototype(Lelesys.Plugin.NodeTypes:MultiContentSlideItem) {
	templatePath = 'resource://Lelesys.Plugin.MultiContent/Private/Templates/TypoScript/SlideItem.html'
	SlideContainerNode = ${q(node).property('_parent.parent')}
	contentContainer = TYPO3.Neos:ContentCollection
	contentContainer {
		nodePath = 'slidecontent'
		collection = ${q(node).children()}
	}
}

prototype(Lelesys.Plugin.NodeTypes:Divider) < prototype(TYPO3.Neos:Template)
prototype(Lelesys.Plugin.NodeTypes:Divider) {
	templatePath = 'resource://Lelesys.Plugin.MultiContent/Private/Templates/TypoScript/Divider.html'
}

prototype(Lelesys.Plugin.NodeTypes:Spacer) < prototype(TYPO3.Neos:Template)
prototype(Lelesys.Plugin.NodeTypes:Spacer) {
	templatePath = 'resource://Lelesys.Plugin.MultiContent/Private/Templates/TypoScript/Spacer.html'
}

prototype(Lelesys.Plugin.NodeTypes:Typography) < prototype(TYPO3.Neos.NodeTypes:Text)
prototype(Lelesys.Plugin.NodeTypes:Typography) {
	templatePath = 'resource://Lelesys.Plugin.MultiContent/Private/Templates/TypoScript/Typography.html'
	title = ${q(node).property('title')}
	moreLink = ${q(node).property('moreLink')}
}

prototype(Lelesys.Plugin.NodeTypes:TeamMember) < prototype(TYPO3.Neos.NodeTypes:Image)
prototype(Lelesys.Plugin.NodeTypes:TeamMember) {
	templatePath = 'resource://Lelesys.Plugin.MultiContent/Private/Templates/TypoScript/TeamMember.html'
	title = ${q(node).property('title')}
	description = ${q(node).property('description')}
	moreLink = ${q(node).property('moreLink')}
}